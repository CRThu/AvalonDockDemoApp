<Window x:Class="AvalonDockDemoApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AvalonDockDemoApp"
        xmlns:sel="clr-namespace:AvalonDockDemoApp.Selector"
        xmlns:v="clr-namespace:AvalonDockDemoApp.View"
        xmlns:vm="clr-namespace:AvalonDockDemoApp.ViewModel"
        xmlns:vmm="clr-namespace:AvalonDockDemoApp.ViewModel.Menu"
        xmlns:ad="https://github.com/Dirkster99/AvalonDock"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="800">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>

        <Style TargetType="{x:Type ad:LayoutDocumentItem}" x:Key="DocumentStyle">
            <Setter Property="Title" Value="{Binding Model.Title}" />
            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
            <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
        </Style>

        <Style TargetType="{x:Type ad:LayoutAnchorableItem}" x:Key="AnchorableStyle">
            <Setter Property="Title" Value="{Binding Model.Title}" />
            <Setter Property="CanHide" Value="False" />
            <Setter Property="CanClose" Value="False" />
        </Style>

        <sel:AvalonDockStyleSelector x:Key="AvalonDockStyleSelector" DocumentStyle="{StaticResource DocumentStyle}" AnchorableStyle="{StaticResource AnchorableStyle}"/>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" DataContext="{Binding MenuTopViewModel}" ItemsSource="{Binding Items}">
            <Menu.Resources>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding ClickCommand}" />
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
                    <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                </Style>
                <HierarchicalDataTemplate DataType="{x:Type vmm:MenuTopViewModel}" ItemsSource="{Binding Items}" />
                <HierarchicalDataTemplate DataType="{x:Type vmm:MenuItemViewModel}" ItemsSource="{Binding Items}" />
            </Menu.Resources>
        </Menu>

        <ad:DockingManager Grid.Row="1"
                         DataContext="{Binding DockManagerViewModel}"
                         DocumentsSource="{Binding Documents}"
                         AnchorablesSource="{Binding Anchorables}"
                         LayoutItemContainerStyleSelector="{StaticResource AvalonDockStyleSelector}"
                         LayoutItemTemplateSelector ="{Binding DataTemplateSelector}"
                         >
            <ad:DockingManager.Theme>
                <ad:Vs2013LightTheme/>
            </ad:DockingManager.Theme>

            <!--<ad:DockingManager.LayoutItemTemplateSelector>
                <sel:AvalonDockDataTemplateSelector/>
            </ad:DockingManager.LayoutItemTemplateSelector>-->

            <!--<ad:DockingManager.Resources>
                --><!--add views for specific ViewModels--><!--
                <DataTemplate DataType="{x:Type vm:SampleApp1ViewModel}">
                    <v:SampleApp1/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:SampleApp2ViewModel}">
                    <v:SampleApp2/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:SampleAnchorableAppViewModel}">
                    <v:SampleAnchorableApp/>
                </DataTemplate>

            </ad:DockingManager.Resources>-->


            <!--<ad:DockingManager.LayoutItemContainerStyle>
                -->
            <!-- you can add additional bindings from the layoutitem to the DockWindowViewModel -->
            <!--
                <Style TargetType="{x:Type ad:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                </Style>
            </ad:DockingManager.LayoutItemContainerStyle>-->
        </ad:DockingManager>
    </Grid>
</Window>
